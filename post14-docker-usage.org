#+title: [Docker] Usage
#+author: constrict0r
#+date: <2020-02-18 mar>

#+CAPTION: Doom
#+NAME:   fig:cooking-with-doom
[[./img/cooking-with-doom.png]]

* Docker Usage

** Basic Usage:

*** Pull an image from DockerHub:

    #+BEGIN_SRC bash
    docker pull <username>/<image-name>:latest    
    #+END_SRC

*** Run a container from the downloaded image mounting a folder on it:

    #+BEGIN_SRC bash
    # With run-time volume.
    docker run \
        -v /home/username/local-folder:/virtual-folder \
        -p 8888:8888/tcp \
        --name <container-name> \
        <username>/<image-name>

    # Or with mount (recommended way).
    docker run \
        -it \
        --mount type=bind,source="$(pwd)",target=/app \
        -p 8888:8888/tcp \
        --name <container-name> \
        <username/<image-name>
    #+END_SRC

*** Access to running container terminal:

    #+BEGIN_SRC bash
    docker exec -it <container-name|container-id> /bin/bash
    #+END_SRC

*** Stop a container:

    #+BEGIN_SRC bash
    docker stop <container-name|container-id>
    #+END_SRC

*** Stop all containers:

    #+BEGIN_SRC bash
    docker stop $(docker ps -a -q)
    #+END_SRC

** Listings:

*** List containers:

    #+BEGIN_SRC bash
    docker ps -a
    #+END_SRC

*** List images:

    #+BEGIN_SRC bash
    docker image ls
    #+END_SRC

** Deletion:

*** Delete a container:

    #+BEGIN_SRC bash
    docker rm <container-name|container-id>
    #+END_SRC

*** Delete all containers:

    #+BEGIN_SRC bash
    docker stop $(docker ps -a -q)
    docker rm $(docker ps -a -q)
    #+END_SRC

*** Delete an image:

    #+BEGIN_SRC bash
    docker image rm <image-name|image-id>
    #+END_SRC

* Specific Setups

** [[https://github.com/sstephenson/bats][Bats]]
   
*** Bats Official Image

    This image is useful to execute tests that do not have too much
    requirements, for example if it needs 'apt' or 'sudo' then you better
    use another image (i.e. Debian).

**** Download the image:

     #+BEGIN_SRC bash
     docker pull bats/bats:latest
     #+END_SRC

**** Run your tests with the container (use *$(pwd)* or a global path):

     #+BEGIN_SRC bash
     docker run \
         -it -v "$(pwd)":/app bats/bats:latest /app/test

     # Or:
     docker run \
         -it -v /home/username/my-repo:/app bats/bats:latest /app/test
     #+END_SRC

** [[https://gitlab.com/constrict0r/testme.sh][testme]]

   To execute your project's tests (using testme.sh) inside a Docker
   container, follow the next instructions.

**** Download the image:

     #+BEGIN_SRC bash
     docker pull debian:stable-slim
     #+END_SRC

**** Run your tests inside image (use *$(pwd)* or a global path):

     #+BEGIN_SRC bash
     docker run \
         -it \
         --mount type=bind,source="$(pwd)",target=/app \
         debian:stable-slim \
	 /bin/bash -c "apt update && apt install -y bats && cd /app && ./testme.sh"

     # Or:
     docker run \
         -it \
         --mount type=bind,source=/home/username/my-repo,target=/app \
         debian:stable-slim \
	 /bin/bash -c "apt update && apt install -y bats && cd /app && ./testme.sh"

     # Or even deleting the previous containers:
     docker rm $(docker ps -a -q) && docker run \
         -it \
         --mount type=bind,source="$(pwd)",target=/app \
         debian:stable-slim \
	 /bin/bash -c "apt update && apt install -y bats && cd /app && ./testme.sh"

     # Or using Ubuntu:
     docker run \
         -it \
          --mount type=bind,source="$(pwd)",target=/app \
         ubuntu:xenial \
	 /bin/bash -c "apt update && apt install -y bats && cd /app && ./testme.sh"        
     #+END_SRC

 #+CAPTION: Enjoy
 #+NAME:   fig:Ice Cream
 [[./img/ice-cream.png]]   
